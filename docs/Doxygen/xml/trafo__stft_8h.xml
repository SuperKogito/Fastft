<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="trafo__stft_8h" kind="file" language="C++">
    <compoundname>trafo_stft.h</compoundname>
    <includes local="no">fftw3.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="pad_8h" local="yes">pad.h</includes>
    <includes refid="window_8h" local="yes">window.h</includes>
    <includes refid="signal_8h" local="yes">signal.h</includes>
    <includedby refid="spectral_8h" local="yes">/home/am/Fastft/include/spectral.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>pad.h</label>
        <link refid="pad_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>signal.h</label>
        <link refid="signal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/am/Fastft/include/trafo_stft.h</label>
        <link refid="trafo__stft_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>window.h</label>
        <link refid="window_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fftw3.h</label>
      </node>
      <node id="3">
        <label>math.h</label>
      </node>
      <node id="10">
        <label>sndfile.h</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/am/Fastft/include/spectral.h</label>
        <link refid="spectral_8h"/>
      </node>
      <node id="1">
        <label>/home/am/Fastft/include/trafo_stft.h</label>
        <link refid="trafo__stft_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_stft_struct" prot="public">StftStruct</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="trafo__stft_8h_1af516fc60b3a3bfa5c76faa282898178d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stft_init</definition>
        <argsstring>(StftStruct *stft_struct, int n_fft, int win_length, int hop_length, Padding *padding)</argsstring>
        <name>stft_init</name>
        <param>
          <type><ref refid="struct_stft_struct" kindref="compound">StftStruct</ref> *</type>
          <declname>stft_struct</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_fft</declname>
        </param>
        <param>
          <type>int</type>
          <declname>win_length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hop_length</declname>
        </param>
        <param>
          <type><ref refid="struct_padding" kindref="compound">Padding</ref> *</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
<para>Initialize the STFT structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stft_struct</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the STFT structure to initialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_fft</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the FFT. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>win_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hop_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the hop. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the padding information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/am/Fastft/include/trafo_stft.h" line="35" column="6" declfile="/home/am/Fastft/include/trafo_stft.h" declline="35" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="trafo__stft_8h_1a9a9daab3450b3ec6e48da9ca123dc377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>fftwf_complex *</type>
        <definition>fftwf_complex * stft_compute</definition>
        <argsstring>(StftStruct *stft_struct, Signal *channel_signal, int num_bins, int do_pad)</argsstring>
        <name>stft_compute</name>
        <param>
          <type><ref refid="struct_stft_struct" kindref="compound">StftStruct</ref> *</type>
          <declname>stft_struct</declname>
        </param>
        <param>
          <type><ref refid="struct_signal" kindref="compound">Signal</ref> *</type>
          <declname>channel_signal</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_bins</declname>
        </param>
        <param>
          <type>int</type>
          <declname>do_pad</declname>
        </param>
        <briefdescription>
<para>Compute the STFT (Short-Time Fourier Transform) for a given signal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stft_struct</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the STFT structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_signal</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the input signal. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_bins</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bins in the FFT. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>do_pad</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether padding should be applied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the computed STFT result. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/am/Fastft/include/trafo_stft.h" line="46" column="15" declfile="/home/am/Fastft/include/trafo_stft.h" declline="46" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="trafo__stft_8h_1a0bce5aef7ca57a77d41e1f51bfa541d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stft_inner</definition>
        <argsstring>(StftStruct *stft_struct, float *signal, fftwf_complex **stft_result, int num_frames, int num_bins)</argsstring>
        <name>stft_inner</name>
        <param>
          <type><ref refid="struct_stft_struct" kindref="compound">StftStruct</ref> *</type>
          <declname>stft_struct</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>signal</declname>
        </param>
        <param>
          <type>fftwf_complex **</type>
          <declname>stft_result</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_frames</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_bins</declname>
        </param>
        <briefdescription>
<para>Inner function to compute the STFT. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stft_struct</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the STFT structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signal</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the input signal. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stft_result</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the computed STFT result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_frames</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of frames. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_bins</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bins. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/am/Fastft/include/trafo_stft.h" line="57" column="6" declfile="/home/am/Fastft/include/trafo_stft.h" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="trafo__stft_8h_1a6b77d07c4c00727bc0f63fe90a8cb960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stft_clean</definition>
        <argsstring>(StftStruct *stft_struct)</argsstring>
        <name>stft_clean</name>
        <param>
          <type><ref refid="struct_stft_struct" kindref="compound">StftStruct</ref> *</type>
          <declname>stft_struct</declname>
        </param>
        <briefdescription>
<para>Clean up resources allocated for STFT. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stft_struct</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the STFT structure to clean up. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/am/Fastft/include/trafo_stft.h" line="64" column="6" declfile="/home/am/Fastft/include/trafo_stft.h" declline="64" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TRAFO_STFT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRAFO_STFT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fftw3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pad_8h" kindref="compound">pad.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="window_8h" kindref="compound">window.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="signal_8h" kindref="compound">signal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="struct_stft_struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16" refid="struct_stft_struct_1a7fee7b546595edcbee920757b6309386" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_stft_struct_1a7fee7b546595edcbee920757b6309386" kindref="member">win</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17" refid="struct_stft_struct_1a470667994f9f206c7c300a8fc9fb6aa0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_stft_struct_1a470667994f9f206c7c300a8fc9fb6aa0" kindref="member">hop</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18" refid="struct_stft_struct_1a5fe0c446c13b53f5c7d455b623a25234" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_stft_struct_1a5fe0c446c13b53f5c7d455b623a25234" kindref="member">nfft</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19" refid="struct_stft_struct_1ac862a0e313831d5881be4fba5710244c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>fftwf_plan<sp/><ref refid="struct_stft_struct_1ac862a0e313831d5881be4fba5710244c" kindref="member">plan</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20" refid="struct_stft_struct_1a2d8c91da6215ea27f432f1dfb4afc861" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_stft_struct_1a2d8c91da6215ea27f432f1dfb4afc861" kindref="member">stft_in</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21" refid="struct_stft_struct_1aae05c312bd3df0cbdcf81d2050fe1206" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>fftwf_complex*<sp/><ref refid="struct_stft_struct_1aae05c312bd3df0cbdcf81d2050fe1206" kindref="member">stft_out</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="22" refid="struct_stft_struct_1a22d2bd25deff35fb222c81eda8a51203" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="struct_stft_struct_1a22d2bd25deff35fb222c81eda8a51203" kindref="member">wnd</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23" refid="struct_stft_struct_1a79a19f415e0c5ac7f9c5aa10803ccf73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_padding" kindref="compound">Padding</ref>*<sp/><ref refid="struct_stft_struct_1a79a19f415e0c5ac7f9c5aa10803ccf73" kindref="member">padding</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal">}<sp/><ref refid="struct_stft_struct" kindref="compound">StftStruct</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="trafo__stft_8h_1af516fc60b3a3bfa5c76faa282898178d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="trafo__stft_8h_1af516fc60b3a3bfa5c76faa282898178d" kindref="member">stft_init</ref>(<ref refid="struct_stft_struct" kindref="compound">StftStruct</ref><sp/>*stft_struct,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_fft,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>win_length,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hop_length,<sp/><ref refid="struct_padding" kindref="compound">Padding</ref>*<sp/>padding);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="trafo__stft_8h_1a9a9daab3450b3ec6e48da9ca123dc377" refkind="member"><highlight class="normal">fftwf_complex*<sp/><ref refid="trafo__stft_8h_1a9a9daab3450b3ec6e48da9ca123dc377" kindref="member">stft_compute</ref>(<ref refid="struct_stft_struct" kindref="compound">StftStruct</ref>*<sp/>stft_struct,<sp/><ref refid="struct_signal" kindref="compound">Signal</ref><sp/>*channel_signal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_bins,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>do_pad);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="trafo__stft_8h_1a0bce5aef7ca57a77d41e1f51bfa541d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="trafo__stft_8h_1a0bce5aef7ca57a77d41e1f51bfa541d0" kindref="member">stft_inner</ref>(<ref refid="struct_stft_struct" kindref="compound">StftStruct</ref>*<sp/>stft_struct,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>signal,<sp/>fftwf_complex**<sp/>stft_result,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_frames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_bins);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="trafo__stft_8h_1a6b77d07c4c00727bc0f63fe90a8cb960" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="trafo__stft_8h_1a6b77d07c4c00727bc0f63fe90a8cb960" kindref="member">stft_clean</ref>(<ref refid="struct_stft_struct" kindref="compound">StftStruct</ref><sp/>*stft_struct);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/am/Fastft/include/trafo_stft.h"/>
  </compounddef>
</doxygen>
